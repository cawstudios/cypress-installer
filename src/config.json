{
  "cypressConfig": {
    "$schema": "https://on.cypress.io/cypress.schema.json",
    "fixturesFolder": "cypress/fixtures",
    "integrationFolder": "cypress/integration",
    "pluginsFile": "cypress/plugins/index.ts",
    "supportFile": "cypress/support/index.ts",
    "screenshotsFolder": "cypress/screenshots",
    "videosFolder": "cypress/videos",
    "baseUrl": "http://localhost:4200"
  },

  "serve": {
    "builder": "ngx-build-plus:dev-server",
    "options": {
      "extraWebpackConfig": "./cypress/coverage.webpack.js"
    }
  },

  "nyc": {
    "extends": "@istanbuljs/nyc-config-typescript",
    "all": true
  },
  "commands": {
    "installCypress": "npm install cypress --save-dev",
    "uninstallKarma": "npm uninstall karma karma-chrome-launcher karma-coverage karma-coverage-istanbul-reporter karma-jasmine karma-jasmine-html-reporter @types/jasmine @types/jasminewd2 jasmine-core jasmine-spec-reporter",
    "installConcurrently": "npm install concurrently --save-dev",
    "installNgx-build-plus": "npm i -D ngx-build-plus",
    "installIstanbul": "npm i -D istanbul-instrumenter-loader",
    "installCoverage": "npm install -D @cypress/code-coverage @cypress/webpack-preprocessor ts-loader",
    "installMochaReport":"npm i -D mocha@7.2.0 mochawesome@6.1.1 mochawesome-merge@4.1.0 mochawesome-report-generator@5.1.0",
    "installBabelIstanbul":"npm i -D babel-plugin-istanbul",
    "installCodeCoverageVue":"npm i -D @cypress/code-coverage  istanbul-lib-coverage nyc ",
    "installComponentTestReact":"npm i @cypress/react @cypress/webpack-dev-server -D",
    "installCypressIntrumentation":"npm i @cypress/instrument-cra -D",
    "installEslintCypress":"npm i eslint-plugin-cypress  -D",
    "installNpmRunAll":"npm i npm-run-all -D",
    "installCodeCoverageReact":"npm i @cypress/code-coverage nyc istanbul-lib-coverage -D",
    "installTypescript":"npm i -D typescript@4.2.3"
  },
  "mochaReportScripts":{
    "remove-reports": "npx rimraf ./mochawesome-report && npx rimraf ./cypress-tests-report.json && npx rimraf ./cypress/screenshots && npx rimraf ./cypress/videos && npx rimraf test-reports",
    "merge:reports": "mochawesome-merge mochawesome-report/*.json > cypress-tests-report.json",
    "create:html:report": "marge --reportDir test-reports  --reportTitle Cypress-Tests --reportPageTitle Toptal-Cypress-Tests --charts true --reportFilename index cypress-tests-report.json",
    "generate:html:report": "npm run merge:reports && npm run create:html:report"
  },
  "filePath": {
    "karmaConf": "karma.conf.js",
    "test.ts": "src/test.ts",
    "cypress-coverage": "node_modules/@caw-studios/cypressinstaller/cypress-coverage/",
    "cypress-installer": "node_modules/@caw-studios/cypressinstaller/",
    "cypress/test": "/cypress/tests/e2e",
    "cypress/screenshots": "/cypress/screenshots",
    "cypress/videos": "/cypress/videos",
    "cypress/tsconfig": "cypress/tsconfig.json"
  },
  "reactScripts": {
    "start": "npm-run-all start-intr",
    "start-intr": "react-scripts -r @cypress/instrument-cra start",
    "dev": "start-test 3000 cypress"
  },
  "reactEslintConfig": {
    "extends": ["react-app", "react-app/jest", "plugin:cypress/recommended"]
  },
  "tsconfig": {
    "compilerOptions": {
    "target": "es5",
    "module": "commonjs",
    "moduleResolution": "node",
    "lib": ["es5","es2016", "dom"],
    "outDir": "./dist",
    "skipLibCheck": true,
    "pretty": true,
    "types": ["node","cypress"],
    "typeRoots": ["./node_modules/@types"]
    },
    "include": ["**/*.ts"]
  },
  "question":{
    "cypressPrompt":"would you like to install cypress into your project(y/N):",
    "angularProtractorPrompt":"Do you want to uninstall protractor(y/N):",
    "promptConcurrently":"would you like to install concurrently into your project(y/N):",
    "promptComponentTestReact":"would you like to install component testing for your react project(y/N):",
    "promptCoverage":"would you like to install cypress coverage into your project(y/N):",
    "promptMochaReport":"would you like to install mocha report into your project(y/N):"
  }
}
